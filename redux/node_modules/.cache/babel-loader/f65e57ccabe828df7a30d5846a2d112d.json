{"ast":null,"code":"var _jsxFileName = \"/home/binduk/REACT assignments/redux/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Counter \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(increment()),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"kekweKlgGDYl7VGjQQ+BKXXb0Ho=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/binduk/REACT assignments/redux/src/App.jsx"],"names":["React","useSelector","useDispatch","increment","App","counter","state","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,SAAT,QAA0B,WAA1B;;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACZ,QAAMC,OAAO,GAAEJ,WAAW,CAACK,KAAK,IAAGA,KAAK,CAACD,OAAf,CAA1B;AACA,QAAME,QAAQ,GAACL,WAAW,EAA1B;AACA,sBACE;AAAA,4BACD;AAAA,8BAAcG,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAED;AAAQ,MAAA,OAAO,EAAE,MAAKE,QAAQ,CAACJ,SAAS,EAAV,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFC;AAAA,kBADF;AAMD;;GATQC,G;UACQH,W,EACAC,W;;;KAFRE,G;AAUT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { increment } from './actions';\n\nfunction App(){\n  const counter= useSelector(state=> state.counter);\n  const dispatch=useDispatch();\n  return (\n    <>\n   <h1> Counter {counter}</h1>\n   <button onClick={()=> dispatch(increment())}>+</button>\n</>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}