{"ast":null,"code":"var _jsxFileName = \"/home/binduk/REACT assignments/redux/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Counter \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Y7vguJnByGXeD5U4dCX/IxJPE/A=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/binduk/REACT assignments/redux/src/App.tsx"],"names":["React","useSelector","App","counter","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAAuC,aAAvC;;;;AAGA,SAASC,GAAT,GAAc;AAAA;;AACZ,QAAMC,OAAO,GAAEF,WAAW,CAACG,KAAK,IAAGA,KAAK,CAACD,OAAf,CAA1B;AACA,sBACE;AAAA,4BACD;AAAA,8BAAcA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFC,eAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHC;AAAA,kBADF;AAOD;;GATQD,G;UACQD,W;;;KADRC,G;AAUT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { increment } from './actions';\n\nfunction App(){\n  const counter= useSelector(state=> state.counter);\n  return (\n    <>\n   <h1> Counter {counter}</h1>\n   <button>+</button>\n   <button>-</button>\n</>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}